{"version":3,"sources":["services/login.js","services/blogs.js","components/Togglable.js","components/Comment.js","reducers/blogsReducer.js","components/Blog.js","components/Notification.js","reducers/notificationReducer.js","reducers/loginReducer.js","components/LoginOut.js","services/signup.js","components/SignUp.js","components/ReturnButton.js","services/userList.js","reducers/userListReducer.js","components/User.js","components/Menu.js","App.js","store.js","index.js"],"names":["token","login","credentials","a","axios","post","response","data","setToken","tmp","getToken","baseUrl","getAll","get","create","newBlog","config","headers","Authorization","loginService","createComment","blogID","newComment","update","put","deleteBlog","delete","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","Button","className","id","onClick","showLabel","hideLabel","children","displayName","CommentList","comments","ListGroup","map","comment","index","Item","NewCommentForm","setCommentsTmp","setComment","blogMatch","useRouteMatch","handleSubmit","event","preventDefault","blogService","params","concat","Form","onSubmit","Row","Group","Control","required","type","value","onChange","target","CommentSection","commentsTmp","insertBlog","dispatch","savedBlog","blog","removeBlog","window","confirm","title","author","blogsReducer","state","action","blogs","blogsTmp","filter","LikesButton","likes","handleLikes","Blog","to","BlogDetail","user","history","useHistory","useDispatch","blogLikes","setBlogLikes","url","handleRemove","goBack","Card","Header","Body","Footer","name","NewBlogForm","addBlog","setTitle","setAuthor","setUrl","handleCreate","Label","Notification","notification","useSelector","Alert","variant","color","message","lastTimer","setNotification","time","clearTimeout","setTimeout","notificationReducer","userLogin","credential","username","password","returnedUser","localStorage","setItem","JSON","stringify","loginReducer","LoginForm","setUsername","setPassword","useEffect","handleLogin","LogOutButton","removeItem","signUp","TextInput","label","useField","field","meta","isInvalid","error","Feedback","SignupForm","handleSignup","values","signupService","nickname","onHide","schema","yup","min","validationSchema","initialValues","noValidate","ModalSignUpForm","Modal","centered","closeButton","Title","ModalSignUpFormButton","modalShow","setModalShow","show","ReturnButton","userListReducer","users","UserList","userListService","usersInDB","userList","Table","striped","length","IndiUserView","Menu","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","Nav","Link","href","as","App","blogsInDB","sort","blog1","blog2","loggedUser","parse","getItem","blogFormRef","useRef","userMatch","userToBeViewd","find","blogToBeViewd","console","log","path","tmpblog","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0d7fbb4.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/login'\nlet token = null\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\nconst setToken = (tmp) => {\n  token = `bearer ${tmp}`\n}\nconst getToken = () => {\n  return token\n}\n\nexport default { login, setToken, getToken }\n","import axios from 'axios'\nimport loginService from './login'\n\nconst baseUrl = '/api/blogs'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\nconst create = async (newBlog) => {\n  const config = {\n    headers: { Authorization: loginService.getToken() },\n  }\n  const response = await axios.post(baseUrl, newBlog, config)\n  return response.data\n}\n\nconst createComment = async (blogID, newComment) => {\n  const config = {\n    headers: { Authorization: loginService.getToken() },\n  }\n  const response = await axios.post(\n    `${baseUrl}/${blogID}/comments`,\n    newComment,\n    config,\n  )\n  return response.data\n}\n\nconst update = async (blogID, newBlog) => {\n  const config = {\n    headers: { Authorization: loginService.getToken() },\n  }\n  const response = await axios.put(`${baseUrl}/${blogID}`, newBlog, config)\n  return response.data\n}\nconst deleteBlog = async (blogID) => {\n  const config = {\n    headers: { Authorization: loginService.getToken() },\n  }\n  await axios.delete(`${baseUrl}/${blogID}`, config)\n}\nexport default { getAll, create, createComment, update, deleteBlog }\n","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'react-bootstrap'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility,\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button\n          className=\"btn-highlight \"\n          id=\"showTogglable\"\n          onClick={toggleVisibility}\n        >\n          {props.showLabel}\n        </Button>\n      </div>\n      <div style={showWhenVisible} className=\"togglableContent\">\n        <Button\n          className=\"btn-muted\"\n          id=\"hideTogglable\"\n          onClick={toggleVisibility}\n        >\n          {props.hideLabel}\n        </Button>\n        {props.children}\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  showLabel: PropTypes.string.isRequired,\n  hideLabel: PropTypes.string.isRequired,\n}\nTogglable.displayName = 'Togglable'\nexport default Togglable\n","import React, { useState } from 'react'\nimport { Button, Form, ListGroup } from 'react-bootstrap'\nimport { useRouteMatch } from 'react-router-dom'\nimport blogService from '../services/blogs'\n\nconst CommentList = ({ comments }) => {\n  return (\n    <>\n      <ListGroup>\n        {comments.map((comment, index) => (\n          <ListGroup.Item key={index}>{comment}</ListGroup.Item>\n        ))}\n      </ListGroup>\n      <br />\n    </>\n  )\n}\nconst NewCommentForm = ({ comments, setCommentsTmp }) => {\n  const [comment, setComment] = useState('')\n  const blogMatch = useRouteMatch('/blogs/:id')\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    await blogService.createComment(blogMatch.params.id, { comment: comment })\n    setCommentsTmp(comments.concat(comment))\n    setComment('')\n  }\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Row>\n        <Form.Group>\n          <Form.Control\n            required\n            id=\"comment\"\n            type=\"text\"\n            value={comment}\n            onChange={({ target }) => setComment(target.value)}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Button className=\"btn-white\" type=\"submit\">\n            add comment\n          </Button>\n        </Form.Group>\n      </Form.Row>\n    </Form>\n  )\n}\nconst CommentSection = ({ comments }) => {\n  const [commentsTmp, setCommentsTmp] = useState(comments)\n  return (\n    <div>\n      <h2>Comments</h2>\n      <NewCommentForm comments={commentsTmp} setCommentsTmp={setCommentsTmp} />\n      <CommentList comments={commentsTmp} />\n    </div>\n  )\n}\n\nexport { CommentSection, CommentList, NewCommentForm }\n","import blogService from '../services/blogs'\n\nconst initBlogs = () => {\n  return async (dispatch) => {\n    const blogsInDB = await blogService.getAll()\n    blogsInDB.sort((blog1, blog2) => blog2.likes - blog1.likes)\n    dispatch({ type: 'INIT_BLOGS', blogs: blogsInDB })\n  }\n}\n\nconst insertBlog = (newBlog) => {\n  return async (dispatch) => {\n    const savedBlog = await blogService.create(newBlog)\n    dispatch({ type: 'ADD_BLOG', blog: savedBlog })\n  }\n}\n\nconst removeBlog = (blog) => {\n  return async (dispatch) => {\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}`)) {\n      await blogService.deleteBlog(blog.id)\n      dispatch({ type: 'REMOVE_BLOG', id: blog.id })\n    }\n  }\n}\n\nconst blogsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_BLOGS':\n      return action.blogs\n    case 'ADD_BLOG':\n      return state.concat(action.blog)\n    case 'REMOVE_BLOG': {\n      const blogsTmp = state.filter((tmp) => tmp.id !== action.id)\n      // const blogsTmp = [...state]\n      // blogsTmp.splice(action.index, 1)\n      return blogsTmp\n    }\n    default:\n      return state\n  }\n}\n\nexport default blogsReducer\nexport { initBlogs, insertBlog, removeBlog }\n","import React, { useState } from 'react'\nimport blogService from '../services/blogs'\n\n// components\nimport Togglable from './Togglable'\nimport { CommentSection } from './Comment'\n\n// redux\nimport { useDispatch } from 'react-redux'\nimport { removeBlog } from '../reducers/blogsReducer'\n\n// style\nimport { Button, Form, Card } from 'react-bootstrap'\n\n// react router\nimport { Link, useHistory } from 'react-router-dom'\n\nconst LikesButton = ({ likes, handleLikes }) => {\n  return (\n    <div>\n      Likes: {likes}{' '}\n      <Button className=\"btn-highlight\" id=\"likesButton\" onClick={handleLikes}>\n        like\n      </Button>\n    </div>\n  )\n}\nconst Blog = ({ blog }) => {\n  return (\n    <Link className=\"text-primary link\" to={`/blogs/${blog.id}`}>\n      {blog.title} 📌\n      <small className=\"text-muted\"> by {blog.author} </small>\n    </Link>\n  )\n}\nconst ToggledBlog = ({ index, blog, user }) => {\n  const dispatch = useDispatch()\n  const [blogLikes, setBlogLikes] = useState(blog.likes)\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5,\n  }\n  const handleLikes = async () => {\n    await blogService.update(blog.id, {\n      likes: blogLikes + 1,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url,\n    })\n    setBlogLikes(blogLikes + 1)\n  }\n  const handleRemove = async () => {\n    dispatch(removeBlog(blog, index))\n  }\n  return (\n    <div className=\"blogDetail\" style={blogStyle}>\n      {blog.title} {blog.author}\n      <Togglable showLabel=\"view\" hideLabel=\"hide\">\n        <p>{blog.url}</p>\n        <LikesButton likes={blogLikes} handleLikes={handleLikes} />\n        <p>{blog.user.name}</p>\n        {blog.user.id === user.id ? (\n          <Button className=\"btn-muted\" onClick={handleRemove}>\n            remove\n          </Button>\n        ) : blog.user === user.id ? (\n          <Button className=\"btn-muted\" onClick={handleRemove}>\n            remove\n          </Button>\n        ) : (\n          ''\n        )}\n      </Togglable>\n    </div>\n  )\n}\n\nconst BlogDetail = ({ blog, user }) => {\n  const history = useHistory()\n\n  const dispatch = useDispatch()\n  const [blogLikes, setBlogLikes] = useState(blog.likes)\n\n  const handleLikes = async () => {\n    await blogService.update(blog.id, {\n      likes: blogLikes + 1,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url,\n    })\n    setBlogLikes(blogLikes + 1)\n  }\n  const handleRemove = async () => {\n    dispatch(removeBlog(blog))\n    history.goBack()\n  }\n  return (\n    <div>\n      <Card className=\"blogdetails\">\n        <Card.Header>\n          <LikesButton likes={blogLikes} handleLikes={handleLikes} />\n        </Card.Header>\n        <Card.Body>\n          <blockquote className=\"blockquote mb-0\">\n            <p> {blog.title} </p>\n            <footer className=\"blockquote-footer\">\n              <cite title=\"Source Title\">{blog.author}</cite>\n            </footer>\n          </blockquote>\n          {blog.user.id === user.id ? (\n            <Button className=\"btn-muted\" onClick={handleRemove}>\n              remove\n            </Button>\n          ) : blog.user === user.id ? (\n            <Button className=\"btn-muted\" onClick={handleRemove}>\n              remove\n            </Button>\n          ) : (\n            ''\n          )}\n        </Card.Body>\n        <Card.Footer>\n          <small className=\"text-muted\">\n            Added by {blog.user.name} | URL: {blog.url}\n          </small>\n        </Card.Footer>\n      </Card>\n\n      <CommentSection comments={blog.comments} />\n    </div>\n  )\n}\nconst NewBlogForm = ({ addBlog }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleCreate = async (event) => {\n    event.preventDefault()\n    addBlog({\n      title: title,\n      author: author,\n      url: url,\n    })\n  }\n\n  return (\n    <div>\n      <Form onSubmit={handleCreate}>\n        <Form.Group>\n          <Form.Label>Title:</Form.Label>\n          <Form.Control\n            required\n            id=\"title\"\n            type=\"text\"\n            value={title}\n            name=\"Title\"\n            onChange={({ target }) => setTitle(target.value)}\n          />\n          <Form.Label>Author:</Form.Label>\n          <Form.Control\n            required\n            id=\"author\"\n            type=\"text\"\n            value={author}\n            name=\"Author\"\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n          <Form.Label>URL</Form.Label>\n          <Form.Control\n            required\n            id=\"url\"\n            type=\"text\"\n            value={url}\n            name=\"Url\"\n            onChange={({ target }) => setUrl(target.value)}\n          />\n          <Button className=\"btn-highlight\" id=\"newBlogButton\" type=\"submit\">\n            create\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\nexport { Blog, BlogDetail, NewBlogForm, LikesButton, ToggledBlog }\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Alert } from 'react-bootstrap'\n\nconst Notification = () => {\n  const notification = useSelector((state) => state.notification)\n  if (notification === null) {\n    return null\n  }\n\n  return (\n    <div>\n      <Alert variant={notification.color}>{notification.message}</Alert>\n    </div>\n  )\n}\n\nexport { Notification }\n","let lastTimer = null\n\nconst resetNotification = () => {\n  return { type: 'RESET' }\n}\n\nconst setNotification = (message, color, time) => {\n  return async (dispatch) => {\n    await dispatch({ type: 'SET_NOTIFICATION', message: message, color: color })\n    if (lastTimer !== null) {\n      clearTimeout(lastTimer)\n    }\n    lastTimer = setTimeout(() => {\n      dispatch(resetNotification())\n    }, time * 1000)\n  }\n}\n\nconst notificationReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'RESET':\n      return null\n    case 'SET_NOTIFICATION':\n      return { message: action.message, color: action.color }\n    default:\n      return state\n  }\n}\n\nexport default notificationReducer\nexport { resetNotification, setNotification }\n","import loginService from '../services/login'\nimport { setNotification } from './notificationReducer'\n\nconst initUser = () => {\n  return async (dispatch) => {\n    const loggedUser = JSON.parse(window.localStorage.getItem('loggedUser'))\n    if (loggedUser) {\n      loginService.setToken(loggedUser.token)\n      dispatch({ type: 'SET_USER', user: loggedUser })\n    }\n  }\n}\n\nconst userLogin = (credential) => {\n  return async (dispatch) => {\n    try {\n      const returnedUser = await loginService.login({\n        username: credential.username,\n        password: credential.password,\n      })\n      window.localStorage.setItem('loggedUser', JSON.stringify(returnedUser))\n      loginService.setToken(returnedUser.token)\n      dispatch({ type: 'SET_USER', user: returnedUser })\n    } catch (exception) {\n      dispatch(setNotification('wrong username or password', 'danger', 5))\n    }\n  }\n}\n\nconst userLogout = () => {\n  return async (dispatch) => {\n    window.localStorage.removeItem('loggedUser')\n\n    dispatch({ type: 'RESET_USER' })\n  }\n}\n\nconst loginReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'RESET_USER':\n      return null\n    case 'SET_USER':\n      return action.user\n    default:\n      return state\n  }\n}\n\nexport default loginReducer\nexport { initUser, userLogin, userLogout }\n","import React, { useEffect, useState } from 'react'\nimport { Notification } from '../components/Notification'\nimport PropTypes from 'prop-types'\nimport { useDispatch } from 'react-redux'\nimport { resetNotification } from '../reducers/notificationReducer'\nimport { userLogin, userLogout } from '../reducers/loginReducer'\n\nimport { Button, Form } from 'react-bootstrap'\nimport '../css/HomePage.css'\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(resetNotification())\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    dispatch(userLogin({ username: username, password: password }))\n  }\n\n  return (\n    <div>\n      <Notification />\n      <Form onSubmit={handleLogin}>\n        <Form.Group>\n          <Form.Label>Username:</Form.Label>\n          <Form.Control\n            required\n            id=\"loginUsername\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n          <Form.Label>Password:</Form.Label>\n          <Form.Control\n            required\n            id=\"loginPwd\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n          <Button\n            className=\"btn-block btn-color\"\n            id=\"loginButton\"\n            type=\"submit\"\n          >\n            Log In\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nconst LogOutButton = ({ username }) => {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(resetNotification())\n  }, [])\n\n  const handleLogout = (event) => {\n    event.preventDefault()\n    dispatch(userLogout())\n  }\n  return (\n    <div>\n      <span className=\"text-white\">{username} logged in </span>\n      <Button className=\"btn-muted\" onClick={handleLogout}>\n        Log Out\n      </Button>\n    </div>\n  )\n}\n\nLogOutButton.propTypes = {\n  username: PropTypes.string.isRequired,\n}\nexport { LoginForm, LogOutButton }\n","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst signUp = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { signUp }\n","import React, { useEffect, useState } from 'react'\n// components\nimport { useDispatch } from 'react-redux'\nimport {\n  resetNotification,\n  setNotification,\n} from '../reducers/notificationReducer'\n\n// backend\nimport signupService from '../services/signup'\n\n// style\nimport { Button, Form, Modal } from 'react-bootstrap'\nimport { Formik, useField } from 'formik'\nimport * as yup from 'yup'\nimport '../css/HomePage.css'\n\nconst TextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props)\n  return (\n    <Form.Group>\n      <Form.Label>{label}</Form.Label>\n      <Form.Control {...props} {...field} isInvalid={!!meta.error} />\n\n      <Form.Control.Feedback type=\"invalid\">{meta.error}</Form.Control.Feedback>\n    </Form.Group>\n  )\n}\nconst SignupForm = (props) => {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(resetNotification())\n  }, [])\n\n  const handleSignup = async (values) => {\n    event.preventDefault()\n    try {\n      await signupService.signUp({\n        username: values.username,\n        name: values.nickname,\n        password: values.password,\n      })\n      dispatch(resetNotification())\n      props.onHide()\n    } catch (e) {\n      props.onHide()\n      dispatch(setNotification('username exists', 'danger', 5))\n    }\n  }\n  const schema = yup.object({\n    username: yup.string().required().min(3),\n    nickname: yup.string().required().min(3),\n    password: yup.string().required().min(3),\n  })\n  return (\n    <>\n      <Formik\n        validationSchema={schema}\n        onSubmit={handleSignup}\n        initialValues={{\n          username: '',\n          nickname: '',\n          password: '',\n        }}\n      >\n        {({ handleSubmit }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            <TextInput label=\"Username\" name=\"username\" type=\"text\" />\n            <TextInput label=\"Nickname\" name=\"nickname\" type=\"text\" />\n            <TextInput label=\"Password\" name=\"password\" type=\"text\" />\n            <Button className=\"btn-block btn-white\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  )\n}\nconst ModalSignUpForm = (props) => {\n  return (\n    <Modal {...props} centered>\n      <Modal.Header closeButton>\n        <Modal.Title>Sign Up 😊</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <SignupForm onHide={props.onHide} />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button className=\"btn-white\" onClick={props.onHide}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\nconst ModalSignUpFormButton = () => {\n  const [modalShow, setModalShow] = useState(false)\n\n  return (\n    <>\n      <Button\n        className=\"btn-block btn-white\"\n        onClick={() => setModalShow(true)}\n      >\n        Sign Up\n      </Button>\n      <ModalSignUpForm show={modalShow} onHide={() => setModalShow(false)} />\n    </>\n  )\n}\nexport { SignupForm, ModalSignUpFormButton, ModalSignUpForm }\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Button } from 'react-bootstrap'\n\nconst ReturnButton = () => {\n  const history = useHistory()\n  const handleReturn = () => {\n    // history.push('/users')\n    history.goBack()\n  }\n  return (\n    <Button className=\"btn-muted\" onClick={handleReturn} variant=\"secondary\">\n      return\n    </Button>\n  )\n}\n\nexport { ReturnButton }\n","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nexport default { getAll }\n","import userListService from '../services/userList'\n\nconst initUserList = () => {\n  return async (dispatch) => {\n    const usersInDB = await userListService.getAll()\n    dispatch({ type: 'INIT', users: usersInDB })\n  }\n}\nconst userListReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'INIT':\n      return action.users\n    case 'RESET':\n      return null\n    default:\n      return state\n  }\n}\n\nexport default userListReducer\nexport { initUserList }\n","import React, { useEffect } from 'react'\n// components\nimport { ReturnButton } from './ReturnButton'\n\n// redux\nimport { useDispatch, useSelector } from 'react-redux'\nimport { initUserList } from '../reducers/userListReducer'\n\n// react router\nimport { Link } from 'react-router-dom'\n\n// style\nimport { Table, ListGroup } from 'react-bootstrap'\n\nconst UserList = () => {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(initUserList())\n  }, [])\n\n  const userList = useSelector((state) => state.userList)\n  if (!userList) {\n    return null\n  }\n\n  return (\n    <div>\n      <h2>Users</h2>\n      <ReturnButton />\n      <Table striped>\n        <thead>\n          <tr>\n            <th></th>\n            <th className=\"text-white\">blogs created</th>\n          </tr>\n        </thead>\n        <tbody>\n          {userList.map((user) => (\n            <tr key={user.id}>\n              <td>\n                <Link to={`/users/${user.id}`}>\n                  {' '}\n                  <span className=\"text-white\">{user.username}</span>\n                </Link>\n              </td>\n              <td className=\"text-white\">{user.blogs.length}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nconst IndiUserView = ({ user }) => {\n  if (!user) {\n    return null\n  }\n\n  return (\n    <div>\n      <h1>{user.username}</h1>\n      <h2>added blogs</h2>\n      <ReturnButton />\n      <ListGroup>\n        {user.blogs.map((blog) => (\n          <ListGroup.Item key={blog.id}>{blog.title}</ListGroup.Item>\n        ))}\n      </ListGroup>\n    </div>\n  )\n}\nexport { UserList, IndiUserView }\n","import React from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { LogOutButton } from './LoginOut'\nimport { useSelector } from 'react-redux'\n\nconst Menu = () => {\n  const user = useSelector((state) => state.user)\n\n  return (\n    <Navbar\n      className=\"nav-green\"\n      collapseOnSelect\n      expand=\"lg\"\n      bg=\"dark\"\n      variant=\"dark\"\n    >\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#\" as=\"span\">\n            <Link className=\"text-primary h4\" to=\"/\">\n              blogs 📝\n            </Link>\n          </Nav.Link>\n          <Nav.Link href=\"#\" as=\"span\">\n            <Link className=\"text-primary h4\" to=\"/users\">\n              users 👥\n            </Link>\n          </Nav.Link>\n        </Nav>\n        <Nav className=\"ml-auto\">\n          <Nav.Link className=\"ml-auto\" href=\"#\" as=\"span\">\n            {user ? (\n              <LogOutButton username={user.name} />\n            ) : (\n              <Link to=\"/login\">login</Link>\n            )}\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\nexport { Menu }\n","import React, { useEffect, useRef } from 'react'\n// components\nimport { Blog, BlogDetail, NewBlogForm } from './components/Blog'\nimport { LoginForm } from './components/LoginOut'\nimport { ModalSignUpFormButton } from './components/SignUp'\nimport { Notification } from './components/Notification'\nimport Togglable from './components/Togglable'\nimport { UserList, IndiUserView } from './components/User'\nimport { Menu } from './components/Menu'\nimport { ReturnButton } from './components/ReturnButton'\n\n// redux\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setNotification } from './reducers/notificationReducer'\nimport { initBlogs, insertBlog } from './reducers/blogsReducer'\nimport { initUser } from './reducers/loginReducer'\n\n// react router\nimport { Switch, Route, useRouteMatch } from 'react-router-dom'\n\n// style\nimport { ListGroup } from 'react-bootstrap'\nimport './css/HomePage.css'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const userList = useSelector((state) => state.userList)\n  const blogs = useSelector((state) => state.blogs)\n  const user = useSelector((state) => state.user)\n  useEffect(() => {\n    dispatch(initBlogs())\n    dispatch(initUser())\n  }, [])\n\n  // const [user, setUser] = useState(null)\n  const blogFormRef = useRef()\n  const userMatch = useRouteMatch('/users/:id')\n  const userToBeViewd = userMatch\n    ? userList.find((tmp) => tmp.id === userMatch.params.id)\n    : null\n\n  const blogMatch = useRouteMatch('/blogs/:id')\n  const blogToBeViewd = blogMatch\n    ? blogs.find((tmp) => tmp.id === blogMatch.params.id)\n    : null\n\n  const addBlog = async (newBlog) => {\n    try {\n      dispatch(insertBlog(newBlog))\n      dispatch(\n        setNotification(`a new blog ${newBlog.title} added`, 'success', 5),\n      )\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  if (user === null) {\n    return (\n      <div className=\"container\">\n        <div className=\"container px-4 py-5 mx-auto\">\n          <div className=\"card card0\">\n            <div className=\"d-flex flex-lg-row flex-column-reverse\">\n              <div className=\"card card1\">\n                <div className=\"row justify-content-center my-auto\">\n                  <div className=\"col-md-8 col-10 my-5\">\n                    <div className=\"row justify-content-center px-3 mb-3\">\n                      {' '}\n                      <h1>😄</h1>\n                    </div>\n                    <h3 className=\"mb-5 text-center heading\">Blog App</h3>\n                    <LoginForm />\n                    <ModalSignUpFormButton />\n                  </div>\n                </div>\n                <div className=\"bottom text-center mb-5\"></div>\n              </div>\n              <div className=\"card card2\">\n                <div className=\"my-auto mx-md-5 px-md-5 right\">\n                  <h3 className=\"text-white\">By Junsheng Tan👋 </h3>{' '}\n                  <small className=\"text-white\">\n                    Aalto University Master student\n                  </small>\n                  <br />\n                  <small className=\"text-white\">\n                    Security and Cloud Computing (SECCLO)\n                  </small>\n                  <br />\n                  <small className=\"text-white\">\n                    Erasmus Mundus Joint Master Degree\n                  </small>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"container \">\n      <div className=\"wholebody\"></div>\n      <div className=\"center\">\n        <Menu />\n        <h2>Blog App</h2>\n        <Notification />\n        <Switch>\n          <Route path=\"/blogs/:id\">\n            <ReturnButton />\n            <BlogDetail blog={blogToBeViewd} user={user} />\n          </Route>\n          <Route path=\"/users/:id\">\n            <IndiUserView user={userToBeViewd} />\n          </Route>\n          <Route path=\"/users\">\n            <UserList />\n          </Route>\n          <Route path=\"/\">\n            <div>\n              <Togglable\n                showLabel=\"create new blog\"\n                hideLabel=\"cancel\"\n                ref={blogFormRef}\n              >\n                <NewBlogForm addBlog={addBlog} />\n              </Togglable>\n              <ListGroup as=\"ul\">\n                <ListGroup.Item as=\"li\" variant=\"info\" className=\"h4\">\n                  Blogs\n                </ListGroup.Item>\n                {blogs.map((tmpblog) => (\n                  <div key={tmpblog.id}>\n                    <ListGroup.Item as=\"li\" key={tmpblog.id}>\n                      <Blog key={tmpblog.id} blog={tmpblog} />\n                    </ListGroup.Item>\n                  </div>\n                ))}\n              </ListGroup>\n            </div>\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport notificationReducer from './reducers/notificationReducer'\nimport blogsReducer from './reducers/blogsReducer'\nimport loginReducer from './reducers/loginReducer'\nimport userListReducer from './reducers/userListReducer'\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  blogs: blogsReducer,\n  user: loginReducer,\n  userList: userListReducer,\n})\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport { store }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { store } from './store'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}